version: 2.1

orbs:
  cypress: cypress-io/cypress@3.4.0


parameters:
  docker_image:
    type: string
    default: 786121685533.dkr.ecr.eu-north-1.amazonaws.com/panel-price:latest
  git-branch:
    type: string
    default: dev

workflows:
  test:
    when:
      not:
        equal: [<< pipeline.parameters.git-branch >>, default]
    jobs:
      - cypress_run:
          filters:
            branches:
              only:
                - main
                - optimize-pipeline
          context:
            - aws-<< pipeline.parameters.git-branch >>
            - github-<< pipeline.parameters.git-branch >>

jobs:
  cypress_run:
    docker:
      - image: cimg/node:18.16.1-browsers
      - image: << pipeline.parameters.docker_image >>
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - cypress/install:
          cypress-cache-key: cypress-cache-{{ arch }}-{{ checksum "package.json" }}
          cypress-cache-path: ~/.cache/Cypress
          include-branch-in-node-cache-key: false
          install-browsers: false
          install-command: ''
          node-cache-version: v1
          package-manager: npm
          post-install: ''
      - run:
          name: Change BASE_URL_PRICE
          command: |
            sed -i "s/\"BASE_URL_PRICE\":.*/\"BASE_URL_PRICE\": \"http:\/\/localhost:3000\",/g" cypress.env.<< pipeline.parameters.git-branch >>.json | true
      - cypress/run-tests:
          cypress-command: npm run test:<< pipeline.parameters.git-branch >>-ci
          working-directory: .
      - store_test_results:
          path: test_results/cypress
      - notify:
          success_message: ":green_circle: Cypress tests passed on panel-price << pipeline.parameters.git-branch >>! ${CIRCLE_BUILD_URL}"
          filename: results.json
          failure_message: ":red_circle: Cypress tests failed on panel-price << pipeline.parameters.git-branch >>! ${CIRCLE_BUILD_URL}"


commands:
  notify:
    description: notify
    parameters:
      webhook_url:
        description: "discord channel webhook url"
        type: string
        default: ${DISCORD_WEBHOOK}
      username:
        type: string
        default: CircleCI
      success_message:
        default: ":green_circle: [${CIRCLE_BRANCH}] ${CIRCLE_JOB} job has succeeded! - ${CIRCLE_BUILD_URL}"
        type: string
        description: success message
      failure_message:
        description: failure message
        type: string
        default: ":red_circle: [${CIRCLE_BRANCH}] ${CIRCLE_JOB} job has failed! - ${CIRCLE_BUILD_URL}"
      filename:
        description: filename
        type: string
        default: output.txt
    steps:
      - run:
          command: |
            echo 'export DISCORD_BUILD_STATUS="success"' >> $BASH_ENV
          name: set failure condition
          when: on_success
      - run:
          command: |
            echo 'export DISCORD_BUILD_STATUS="fail"' >> $BASH_ENV
          name: set failure condition
          when: on_fail
      - run: 
          name: "Notify to Discord"
          command: |
            if [ -z "<< parameters.webhook_url >>"] ; then
              echo "No discrod webhook url set"
              echo "Please input your DISCORD_WEBHOOK_URL value"
              exit 1
            fi

            if [ "$DISCORD_BUILD_STATUS" = "success" ]; then
              curl -H 'Content-type: multipart/form-data' -XPOST --form "payload_json={\"embeds\": [{ \"color\": 1363733, \"title\": \"Circle CI\", \"description\": \"<< parameters.success_message >>\"}]}" --form "file=@<< parameters.filename >>" "<< parameters.webhook_url >>";
            else
              curl -H 'Content-type: multipart/form-data' -XPOST --form "payload_json={\"embeds\": [{ \"color\": 16081506, \"title\": \"Circle CI\", \"description\": \"<< parameters.failure_message >>\"}]}" --form "file=@<< parameters.filename >>" "<< parameters.webhook_url >>";
            fi
          when: always
